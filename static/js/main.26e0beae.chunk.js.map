{"version":3,"sources":["hooks/useWindowSize.jsx","components/LiveChart.jsx","constants.js","components/BusyHoursChart.jsx","components/LocationInfo.jsx","utils/api/besttime.js","components/Map.jsx","images/logo.png","components/AppHeading.jsx","App.js","theme.js","index.js"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","LiveChart","data","ResponsiveContainer","aspect","RadialBarChart","cx","cy","innerRadius","outerRadius","barSize","startAngle","endAngle","PolarAngleAxis","type","domain","angleAxisId","tick","RadialBar","background","clockWise","dataKey","cornerRadius","fill","x","y","textAnchor","dominantBaseline","className","live","weekDays","StyledFormLabel","styled","MenuItem","BusyHoursChart","today","Date","getDay","day","setDay","dataForChart","setDataForChart","length","temp","i","push","hour","busyness","fontSize","focusBorderColor","placement","autoSelect","as","Button","bg","_focus","_hover","_active","size","ChevronDown","onClick","BarChart","CartesianGrid","strokeDasharray","XAxis","label","value","position","dy","YAxis","angle","dx","Tooltip","Legend","verticalAlign","Bar","StyledBox","Box","LocationInfo","liveData","buynessData","liveDataArray","buynessDataArray","setBuynessDataArray","map","day_info","day_int","day_raw","spacing","aria-label","icon","InfoOutline","overflow","paddingRight","apiUrl","makeLiveRequest","method","a","body","params","endpoint","options","url","axios","response","makeRequest","makePostRequest","makePostRequestLive","Map","accessToken","latitude","longitude","zoom","viewport","setViewport","locationCoordinates","setLocationCoordinates","setLiveData","setBuynessData","mapRef","useRef","geocoderContainerRef","toast","useToast","handleViewportChange","useCallback","newViewport","handleGeocoderViewportChange","transitionDuration","requestLiveData","locationName","locationAddress","api_key_private","venue_address","venue_name","status","analysis","venue_live_busyness","title","description","message","duration","isClosable","requestBusynessData","rawData","requestData","results","getParams","result","center","placeName","place_name","slice","indexOf","substring","alignSelf","w","resize","h","ref","style","display","alignItems","paddingLeft","mapboxApiAccessToken","mapStyle","onViewportChange","color","FaMapMarkerAlt","containerRef","onResult","StyledHeading","Heading","StyledHeadingWrapper","Center","AppHeading","src","Logo","alt","App","breakpoints","createBreakpoints","sm","md","lg","xl","theme","extendTheme","colors","black","blue","50","100","200","300","400","500","600","700","800","900","green","fonts","mono","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","resetCSS","document","getElementById"],"mappings":"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","file":"static/js/main.26e0beae.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nexport default useWindowSize;\n","import useWindowSize from '../hooks/useWindowSize';\nimport {\n  RadialBar,\n  PolarAngleAxis,\n  RadialBarChart,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst LiveChart = ({ data }) => {\n  const windowSize = useWindowSize();\n\n  return (\n    <>\n      <ResponsiveContainer width='70%' height='auto' aspect={1.5}>\n        <RadialBarChart\n          cx='70%'\n          cy='50%'\n          innerRadius='90%'\n          outerRadius='100%'\n          barSize={3}\n          data={data}\n          startAngle={230}\n          endAngle={-50}\n        >\n          <PolarAngleAxis\n            type='number'\n            domain={[0, 100]}\n            angleAxisId={0}\n            tick={false}\n          />\n          <RadialBar\n            background\n            clockWise\n            dataKey='live'\n            cornerRadius={windowSize.width / 8}\n            fill='#82ca9d'\n          />\n          <text\n            x='70%'\n            y='50%'\n            textAnchor='middle'\n            dominantBaseline='middle'\n            className='progress-label'\n          >\n            {data[0].live}%\n          </text>\n        </RadialBarChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nexport default LiveChart;\n","export const weekDays = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\n","import {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Tooltip,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n} from 'recharts';\nimport {\n  Button,\n  Text,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Divider,\n  Center,\n} from '@chakra-ui/react';\nimport { ChevronDownIcon } from '@chakra-ui/icons';\nimport styled from '@emotion/styled';\nimport { useState, useEffect } from 'react';\nimport { weekDays } from '../constants';\n\nconst StyledFormLabel = styled(MenuItem)`\n  &:hover {\n    background-color: #bdb3f7;\n  }\n`;\n\nconst BusyHoursChart = ({ data }) => {\n  const getToday = () => {\n    const today = new Date().getDay();\n    return today == 0 ? 6 : today - 1;\n  };\n  const [day, setDay] = useState(getToday);\n  const [dataForChart, setDataForChart] = useState();\n\n  //prepare the data for the bar chart\n  useEffect(() => {\n    if (data != null && data.length !== 0 && data[day] != null) {\n      let temp = [];\n      for (let i = 0; i < 24; i++) {\n        if (i < 6) {\n          temp.push({ hour: i, busyness: data[day][i + 18] });\n        } else {\n          temp.push({ hour: i, busyness: data[day][i - 6] });\n        }\n      }\n      setDataForChart(temp);\n    } else {\n      setDataForChart([]);\n    }\n  }, [data, day]);\n\n  return (\n    <>\n      <Center height='50px'>\n        <Divider />\n        <Text fontSize='sm'>{weekDays[day]}</Text>\n\n        <Divider />\n        <Menu focusBorderColor='#8070da' placement='left' autoSelect={false}>\n          <MenuButton\n            as={Button}\n            bg='#ffffff'\n            _focus={{ bg: '#ffffff' }}\n            _hover={{ bg: '#ffffff' }}\n            _active={{ bg: '#ffffff' }}\n            size='xs'\n          >\n            <ChevronDownIcon />\n          </MenuButton>\n          <MenuList>\n            <StyledFormLabel onClick={() => setDay(0)}>\n              {weekDays[0]}\n            </StyledFormLabel>\n            <StyledFormLabel onClick={() => setDay(1)}>\n              {weekDays[1]}\n            </StyledFormLabel>\n            <StyledFormLabel onClick={() => setDay(2)}>\n              {weekDays[2]}\n            </StyledFormLabel>\n            <StyledFormLabel onClick={() => setDay(3)}>\n              {weekDays[3]}\n            </StyledFormLabel>\n            <StyledFormLabel onClick={() => setDay(4)}>\n              {weekDays[4]}\n            </StyledFormLabel>\n            <StyledFormLabel onClick={() => setDay(5)}>\n              {weekDays[5]}\n            </StyledFormLabel>\n            <StyledFormLabel onClick={() => setDay(6)}>\n              {weekDays[6]}\n            </StyledFormLabel>\n          </MenuList>\n        </Menu>\n      </Center>\n      <ResponsiveContainer width='100%' height='auto' aspect={2}>\n        <BarChart width={500} height={400} data={dataForChart}>\n          <CartesianGrid strokeDasharray='3 3' />\n          <XAxis\n            dataKey='hour'\n            label={{\n              value: 'Hour',\n              position: 'insideBottom',\n              dy: 10,\n            }}\n          />\n          <YAxis\n            label={{\n              value: 'Percentage',\n              angle: -90,\n              position: 'insideRightTop',\n              dx: -10,\n            }}\n          />\n          <Tooltip />\n          <Legend verticalAlign='top' />\n          <Bar dataKey='busyness' fill='#8070da' />\n        </BarChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nexport default BusyHoursChart;\n","import { Box } from '@material-ui/core';\nimport {\n  VStack,\n  Center,\n  Link,\n  Text,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverArrow,\n  PopoverCloseButton,\n} from '@chakra-ui/react';\nimport styled from '@emotion/styled';\nimport React, { useState, useEffect } from 'react';\nimport LiveChart from './LiveChart';\nimport BusyHoursChart from './BusyHoursChart';\nimport { IconButton } from '@chakra-ui/react';\nimport { InfoOutlineIcon } from '@chakra-ui/icons';\n\nconst StyledBox = styled(Box)`\n  background: rgba(255, 255, 255, 0.25);\n  box-shadow: 0 8px 20px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  display: inline-block;\n`;\n\nconst LocationInfo = ({ liveData, buynessData }) => {\n  const liveDataArray = [{ live: liveData, fill: '#8884d8' }];\n  const [buynessDataArray, setBuynessDataArray] = useState([]);\n\n  useEffect(() => {\n    if (buynessData != null && buynessData.length !== 0) {\n      const temp = [];\n      buynessData.map((day) => {\n        temp[day.day_info.day_int] = day.day_raw;\n      });\n      setBuynessDataArray(temp);\n    }\n  }, [buynessData]);\n\n  return (\n    <>\n      <VStack spacing='18px' height='50%'>\n        <StyledBox width='100%'>\n          <Center>Live Traffic</Center>\n          <LiveChart data={liveDataArray} />\n          <Popover placement='top-start'>\n            <PopoverTrigger>\n              <IconButton\n                aria-label='info'\n                icon={<InfoOutlineIcon />}\n                bg='#ffffff'\n                _focus={{ bg: '#ffffff' }}\n                _hover={{ bg: '#ffffff' }}\n                _active={{ bg: '#ffffff' }}\n                size='xs'\n              />\n            </PopoverTrigger>\n            <PopoverContent\n              height='150px'\n              overflow='auto'\n              _focus={{ bg: '#ffffff' }}\n            >\n              <PopoverArrow />\n              <PopoverCloseButton />\n              <PopoverHeader>Live Data Definition</PopoverHeader>\n              <PopoverBody>\n                Live busyness at the venue for current, based on the weekly\n                forecast. Ranging from 0 to 200 percent. In most cases the live\n                percentage will be 100% or lower. However if the value is above\n                100% it means it is more busy than the highest forecasted peak\n                of the week. E.g. 200% meaning it is two times more busy than\n                the normal forecasted peak of the week.\n              </PopoverBody>\n            </PopoverContent>\n          </Popover>\n        </StyledBox>\n\n        <StyledBox width='100%' paddingRight='15px'>\n          <Center>Busy Hours</Center>\n          <BusyHoursChart data={buynessDataArray} />\n          <Popover placement='top-start'>\n            <PopoverTrigger>\n              <IconButton\n                aria-label='info'\n                icon={<InfoOutlineIcon />}\n                bg='#ffffff'\n                _focus={{ bg: '#ffffff' }}\n                _hover={{ bg: '#ffffff' }}\n                _active={{ bg: '#ffffff' }}\n                size='xs'\n              />\n            </PopoverTrigger>\n            <PopoverContent\n              height='150px'\n              overflow='auto'\n              _focus={{ bg: '#ffffff' }}\n            >\n              <PopoverArrow />\n              <PopoverCloseButton />\n              <PopoverHeader>Busy Hours Definition</PopoverHeader>\n              <PopoverBody>\n                Percentages are based on historical visits for the given hour,\n                relative to the biggest peak of the week for this venue.\n              </PopoverBody>\n            </PopoverContent>\n          </Popover>\n        </StyledBox>\n        <Box>\n          <Text fontSize='xs'>\n            Data Taken From: <Link>https://besttime.app/</Link>\n          </Text>\n        </Box>\n      </VStack>\n    </>\n  );\n};\n\nexport default LocationInfo;\n","import axios from 'axios';\n\nconst apiUrl = 'https://besttime.app/api/v1/forecasts';\n\nconst makeLiveRequest = async (method, body = {}, params = {}, endpoint) => {\n  const options = {\n    method: method,\n    url: `${apiUrl}/${endpoint}`,\n    data: body,\n    params: params,\n  };\n\n  const response = await axios(options);\n  return response;\n};\nconst makeRequest = async (method, body = {}, params = {}) => {\n  const options = {\n    method: method,\n    url: `${apiUrl}`,\n    data: body,\n    params: params,\n  };\n\n  const response = await axios(options);\n  return response;\n};\nconst makeGetRequest = async () => {\n  return makeRequest('get');\n};\n\nconst makePostRequest = async (params = {}) => {\n  return makeRequest('post', '', params);\n};\n\nconst makePostRequestLive = async (params = {}) => {\n  return makeLiveRequest('post', '', params, 'live');\n};\n\nexport { makeGetRequest, makePostRequest, makePostRequestLive };\n","import React, { useState, useRef, useCallback } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport Geocoder from 'react-map-gl-geocoder';\nimport { HStack, Box, useToast, Center } from '@chakra-ui/react';\nimport LocationInfo from './LocationInfo';\nimport { makePostRequest, makePostRequestLive } from '../utils/api/besttime';\nimport styled from '@emotion/styled';\nimport useWindowSize from '../hooks/useWindowSize';\nimport { FaMapMarkerAlt } from 'react-icons/fa';\nimport { Icon } from '@chakra-ui/react';\n\nconst StyledBox = styled(Box)`\n  background: rgba(255, 255, 255, 0.25);\n  box-shadow: 0 8px 20px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  display: inline-block;\n`;\n\nconst Map = () => {\n  const windowSize = useWindowSize();\n\n  const accessToken =\n    'pk.eyJ1Ijoia2FyaW4ta2F6YXJpYW4iLCJhIjoiY2tteWVjMnFpMDM4MTJubWYycTJ5N3Q5ZCJ9.Of9brpnQ8Oc-LGZ6P1ArrA';\n\n  const [viewport, setViewport] = useState({\n    latitude: 45.4644455,\n    longitude: -73.745181,\n    zoom: 8,\n  });\n  const [locationCoordinates, setLocationCoordinates] = useState({\n    latitude: 45.4644455,\n    longitude: -73.745181,\n  });\n  const [liveData, setLiveData] = useState(0);\n  const [buynessData, setBuynessData] = useState([]);\n  const mapRef = useRef();\n  const geocoderContainerRef = useRef();\n  const toast = useToast();\n\n  const handleViewportChange = useCallback(\n    (newViewport) => setViewport(newViewport),\n    []\n  );\n\n  const handleGeocoderViewportChange = useCallback(\n    (newViewport) => {\n      const geocoderDefaultOverrides = { transitionDuration: 1000 };\n      return handleViewportChange({\n        ...newViewport,\n        ...geocoderDefaultOverrides,\n      });\n    },\n    [handleViewportChange]\n  );\n\n  //sends a request to BestTimes to get live data\n  const requestLiveData = async (locationName, locationAddress) => {\n    try {\n      var response = await makePostRequestLive({\n        api_key_private: 'pri_7b5f18965b7d46a5b708eeee58fc2354',\n        venue_address: locationAddress,\n        venue_name: locationName,\n      });\n      if (response.data.status !== 'Error') {\n        const busyness = response?.data.analysis?.venue_live_busyness;\n        setLiveData(busyness);\n      } else {\n        throw response.data;\n      }\n    } catch (err) {\n      setLiveData(0);\n      toast({\n        title: 'Error',\n        description: err.message,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  //sends a request to BestTimes to get busyness data\n  const requestBusynessData = async (locationName, locationAddress) => {\n    try {\n      const response = await makePostRequest({\n        api_key_private: 'pri_7b5f18965b7d46a5b708eeee58fc2354',\n        venue_address: locationAddress,\n        venue_name: locationName,\n      });\n      if (response.data.status !== 'Error') {\n        const rawData = response?.data?.analysis;\n        setBuynessData(rawData);\n      } else {\n        setBuynessData([]);\n        throw response.data;\n      }\n    } catch (err) {\n      setLiveData(0);\n      toast({\n        title: 'Error',\n        description: err.message,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  //calls methods that request buyness and live data\n  const requestData = async (results) => {\n    const [locationName, locationAddress] = getParams(results);\n    if (!locationName || !locationAddress) return;\n    requestBusynessData(locationName, locationAddress);\n    requestLiveData(locationName, locationAddress);\n    setLocationCoordinates({\n      longitude: results.result.center?.[0],\n      latitude: results.result.center?.[1],\n    });\n  };\n\n  //returns an array of location name and address\n  const getParams = (results) => {\n    const placeName = results.result.place_name;\n    if (placeName != null) {\n      const locationName = placeName.slice(0, placeName.indexOf(','));\n      const locationAddress = placeName.substring(placeName.indexOf(',') + 1);\n      return [locationName, locationAddress];\n    }\n    return ['', ''];\n  };\n\n  return (\n    <>\n      <HStack spacing='5px'>\n        <StyledBox\n          alignSelf='baseline'\n          w='35%'\n          resize='horizontal'\n          overflow='scroll'\n          h={windowSize.height - 96}\n        >\n          <Center>\n            <div\n              ref={geocoderContainerRef}\n              style={{\n                height: 50,\n                display: 'flex',\n                alignItems: 'center',\n                paddingLeft: 4,\n              }}\n            />\n          </Center>\n          <LocationInfo liveData={liveData} buynessData={buynessData} />\n        </StyledBox>\n\n        <Box w='90%' h={windowSize.height - 96}>\n          <ReactMapGL\n            ref={mapRef}\n            {...viewport}\n            height='100%'\n            width='100%'\n            mapboxApiAccessToken={accessToken}\n            mapStyle='mapbox://styles/karin-kazarian/ckmyepr931r7317prtkdbrhj1'\n            onViewportChange={handleViewportChange}\n          >\n            <Marker\n              latitude={locationCoordinates.latitude}\n              longitude={locationCoordinates.longitude}\n            >\n              <Icon color='black' as={FaMapMarkerAlt} w={8} h={8} />\n            </Marker>\n            <Geocoder\n              mapRef={mapRef}\n              containerRef={geocoderContainerRef}\n              onViewportChange={handleGeocoderViewportChange}\n              mapboxApiAccessToken={accessToken}\n              onResult={requestData}\n            />\n          </ReactMapGL>\n        </Box>\n      </HStack>\n    </>\n  );\n};\n\nexport default Map;\n","export default __webpack_public_path__ + \"static/media/logo.b6a5af5e.png\";","import { Heading, Center, Image } from '@chakra-ui/react';\nimport styled from '@emotion/styled';\nimport useWindowSize from '../hooks/useWindowSize';\nimport Logo from '../images/logo.png';\n\nconst StyledHeading = styled(Heading)`\n  font-family: Verdana, Geneva, sans-serif;\n  font-size: 27px;\n  letter-spacing: 3px;\n  word-spacing: 2px;\n  color: #000000;\n  font-weight: 400;\n  text-decoration: none;\n  font-style: normal;\n  font-variant: normal;\n  text-transform: uppercase;\n  text-shadow: -1px -1px 1px rgba(255, 255, 255, 0.1),\n    1px 1px 1px rgba(0, 0, 0, 0.5);\n`;\n\nconst StyledHeadingWrapper = styled(Center)`\n  margin-bottom: 10px;\n  padding: 40px;\n  background: rgba(235, 216, 247, 0.25);\n  background: rgba(255, 255, 255, 0.25);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n`;\nconst AppHeading = () => {\n  const windowSize = useWindowSize();\n  return (\n    <>\n      <StyledHeadingWrapper height={windowSize.height * 0.03}>\n        <StyledHeading>Time Saver </StyledHeading>\n        <Image src={Logo} alt='time logo' height={43 * 1.5} />\n      </StyledHeadingWrapper>\n    </>\n  );\n};\n\nexport default AppHeading;\n","import Map from './components/Map.jsx';\nimport { Divider } from '@chakra-ui/react';\nimport AppHeading from './components/AppHeading.jsx';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <AppHeading />\n      <Divider />\n      <Map />\n    </div>\n  );\n};\n\nexport default App;\n","import { extendTheme } from '@chakra-ui/react';\nimport { createBreakpoints } from '@chakra-ui/theme-tools';\n\nconst fonts = { mono: `'Menlo', monospace` };\n\nconst breakpoints = createBreakpoints({\n  sm: '40em',\n  md: '52em',\n  lg: '64em',\n  xl: '80em',\n});\n\nconst theme = extendTheme({\n  colors: {\n    black: '#16161D',\n    blue: {\n      50: '#dcf3ff',\n      100: '#aed7ff',\n      200: '#7dbdff',\n      300: '#4aa2ff',\n      400: '#1a87ff',\n      500: '#006ee6',\n      600: '#0055b4',\n      700: '#003d82',\n      800: '#002551',\n      900: '#000d21',\n    },\n    green: {\n      50: '#e4fced',\n      100: '#c2edd4',\n      200: '#9edfb9',\n      300: '#79d29e',\n      400: '#55c684',\n      500: '#3bac6a',\n      600: '#2d8652',\n      700: '#1e6039',\n      800: '#0e3a21',\n      900: '#001507',\n    },\n  },\n  fonts,\n  breakpoints,\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport theme from './theme.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider resetCSS theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}