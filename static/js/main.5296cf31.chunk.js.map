{"version":3,"sources":["components/LocationInfo.jsx","components/Map.jsx","App.js","index.js"],"names":["LocationInfo","isOpen","onClose","onOpen","LocationModal","styled","Box","width","height","background","outline","marginTop","marginLeft","display","alignItems","textAlign","Modal","BackdropProps","invisible","open","disableAutoFocus","disableEnforceFocus","autoFocus","Map","accessToken","useState","latitude","longitude","zoom","viewport","setViewport","useDisclosure","mapRef","useRef","handleViewportChange","useCallback","newViewport","handleGeocoderViewportChange","transitionDuration","test2","console","log","current","cachedResult","place_name","position","ref","mapboxApiAccessToken","mapStyle","onViewportChange","onTransitionStart","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA8BeA,EA5BM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,OAAgBC,GAAa,EAArBC,OAAqB,EAAbD,SAE/BE,EAAgBC,YAAOC,IAAPD,CAAY,CAChCE,MAAO,IACPC,OAAQ,IACRC,WAAY,QACZC,QAAS,OACTC,UAAW,QACXC,WAAY,OACZC,QAAS,OACTC,WAAY,SACZC,UAAW,WAIf,OACE,cAACC,EAAA,EAAD,CACAC,cAAe,CAAEC,WAAW,GAC5BC,KAAMlB,EACNmB,kBAAkB,EAClBC,qBAAmB,EACnBnB,QAASA,EALT,SAOA,cAACE,EAAD,CAAekB,WAAW,EAA1B,sBC2CaC,EA5DH,WAAO,IAAD,IACVC,EACJ,qGAFc,EAGgBC,mBAAS,CACvCC,SAAU,UACVC,WAAY,UACZC,KAAM,IANQ,mBAGTC,EAHS,KAGCC,EAHD,OAQoBC,cAA5B9B,EARQ,EAQRA,OAAQE,EARA,EAQAA,OAAQD,EARR,EAQQA,QAElB8B,EAASC,mBAETC,EAAuBC,uBAC3B,SAACC,GAAD,OAAiBN,EAAYM,KAC7B,IAGIC,EAA+BF,uBACnC,SAACC,GAEC,OAAOF,EAAqB,2BACvBE,GAF4B,CAAEE,mBAAoB,SAMzD,CAACJ,IAGEK,EAAQN,iBAAO,IAGpB,OAFDO,QAAQC,IAAI,iBAAZ,OAA8BF,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAOG,eAArC,iBAA8B,EAAgBC,oBAA9C,aAA8B,EAA8BC,YAGzD,eAACtC,EAAA,EAAD,CAAKE,OAAO,OAAOD,MAAM,OAAOsC,SAAS,WAAzC,UACE,cAAC,IAAD,yBACEC,IAAKd,GACDH,GAFN,IAGEtB,MAAM,OACNC,OAAO,OACPqC,SAAS,WACTE,qBAAsBvB,EACtBwB,SAAS,2DACTC,iBAAkBf,EAClBgB,kBAAmB/C,EATrB,SAWE,cAAC,IAAD,CACE6B,OAAQA,EACRc,IAAKP,EACLU,iBAAkBZ,EAClBU,qBAAsBvB,EACtBjB,MAAM,OACNsC,SAAS,gBAGb,8BACE,cAAC,EAAD,CAAc5C,OAAQA,EAAQE,OAAQA,EAAQD,QAASA,UCnDhDiD,EATH,WACV,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,QCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5296cf31.chunk.js","sourcesContent":["import { Modal ,Box} from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles'; \nconst LocationInfo = ({isOpen, onOpen, onClose}) => {\n  \n  const LocationModal = styled(Box)({\n    width: 300,\n    height: 300,\n    background: 'white',\n    outline: 'none',\n    marginTop: '150px',\n    marginLeft: '20px',\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n  });\n\n\nreturn (\n  <Modal\n  BackdropProps={{ invisible: true }}\n  open={isOpen}\n  disableAutoFocus={true}\n  disableEnforceFocus\n  onClose={onClose}\n>\n  <LocationModal autoFocus={false}>hello</LocationModal>\n</Modal>\n);\n};\n\nexport default LocationInfo;","import React, { useState, useRef, useCallback } from 'react';\nimport ReactMapGL from 'react-map-gl';\nimport Geocoder from 'react-map-gl-geocoder';\nimport { Box} from '@material-ui/core';\nimport {useDisclosure} from '@chakra-ui/react';\nimport LocationInfo from \"./LocationInfo\"\n\n\nconst Map = () => {\n  const accessToken =\n    'pk.eyJ1Ijoia2FyaW4ta2F6YXJpYW4iLCJhIjoiY2tteWVjMnFpMDM4MTJubWYycTJ5N3Q5ZCJ9.Of9brpnQ8Oc-LGZ6P1ArrA';\n  const [viewport, setViewport] = useState({\n    latitude: 45.537875,\n    longitude: -73.757928,\n    zoom: 8,\n  });\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  \n  const mapRef = useRef();\n\n  const handleViewportChange = useCallback(\n    (newViewport) => setViewport(newViewport),\n    []\n  );\n\n  const handleGeocoderViewportChange = useCallback(\n    (newViewport) => {\n      const geocoderDefaultOverrides = { transitionDuration: 1000 };\n      return handleViewportChange({\n        ...newViewport,\n        ...geocoderDefaultOverrides,\n      });\n    },\n    [handleViewportChange]\n  );\n\n const test2 = useRef(\"\");\n console.log(\"test33333333: \", test2?.current?.cachedResult?.place_name);\n\n  return (\n    <Box height=\"100%\" width=\"100%\" position=\"absolute\">\n      <ReactMapGL\n        ref={mapRef}\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        position=\"absolute\"\n        mapboxApiAccessToken={accessToken}\n        mapStyle=\"mapbox://styles/karin-kazarian/ckmyepr931r7317prtkdbrhj1\"\n        onViewportChange={handleViewportChange}\n        onTransitionStart={onOpen}\n      >\n        <Geocoder\n          mapRef={mapRef}\n          ref={test2}\n          onViewportChange={handleGeocoderViewportChange}\n          mapboxApiAccessToken={accessToken}\n          width=\"100%\"\n          position=\"top-left\"\n        />\n      </ReactMapGL>\n      <div>\n        <LocationInfo isOpen={isOpen} onOpen={onOpen} onClose={onClose}/>\n      </div> \n    </Box>\n  );\n};\n\nexport default Map;\n","import Map from './components/Map.jsx';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <h1>Traffic App</h1>\n      <Map />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}