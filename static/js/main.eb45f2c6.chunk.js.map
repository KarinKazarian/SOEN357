{"version":3,"sources":["logo.svg","utils/api/base.js","utils/api/test.js","App.js","reportWebVitals.js","index.js"],"names":["apiUrl","makeRequest","method","endpoint","a","body","params","options","url","data","axios","response","makeGetRequest","getTest","App","handleClick","console","log","className","src","logo","alt","onClick","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAe,MAA0B,iC,yBCEnCA,EAAS,mCAETC,EAAW,uCAAG,WAAOC,EAAQC,GAAf,iCAAAC,EAAA,6DAAyBC,EAAzB,+BAAgC,GAAIC,EAApC,+BAA6C,GACzDC,EAAU,CACdL,OAAQA,EACRM,IAAI,GAAD,OAAKR,EAAL,YAAeG,GAClBM,KAAMJ,EACNC,OAAQA,GALQ,SAQKI,IAAMH,GARX,cAQZI,EARY,yBASXA,GATW,2CAAH,wDAYXC,EAAc,uCAAG,WAAOT,GAAP,SAAAC,EAAA,+EACdH,EAAY,MAAOE,IADL,2CAAH,sDCddU,EAAO,uCAAG,sBAAAT,EAAA,+EACPQ,EAAe,KADR,2CAAH,qD,OC6BEE,MA3Bf,WACE,IAAMC,EAAW,uCAAG,4BAAAX,EAAA,sEACKS,IADL,OACZF,EADY,OAElBK,QAAQC,IAAI,kBAAmBN,GAFb,2CAAH,qDAKjB,OACE,qBAAKO,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,wBAAQC,QAASP,EAAjB,mBACA,mBACEG,UAAU,WACVK,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCNOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb45f2c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios';\r\n\r\nconst apiUrl = \"https://api.mocki.io/v1/b043df5a\";\r\n\r\nconst makeRequest = async (method, endpoint, body = {}, params = {}) => {\r\n  const options = {\r\n    method: method,\r\n    url: `${apiUrl}/${endpoint}`,\r\n    data: body,\r\n    params: params,\r\n  };\r\n\r\n  const response = await axios(options);\r\n  return response;\r\n};\r\n\r\nconst makeGetRequest = async (endpoint) => {\r\n  return makeRequest('get', endpoint);\r\n};\r\n\r\nconst makePostRequest = async (endpoint, body = {}) => {\r\n  return makeRequest('post', endpoint, body);\r\n};\r\n\r\nconst makeDeleteRequest = async (endpoint, body = {}) => {\r\n  return makeRequest('delete', endpoint, body);\r\n};\r\n\r\nconst makePatchRequest = async (endpoint, body = {}, params = {}) => {\r\n  return makeRequest('patch', endpoint, body, params);\r\n};\r\n\r\nexport { makeGetRequest, makePostRequest, makeDeleteRequest, makePatchRequest };\r\n","import { makeGetRequest } from './base.js';\r\n\r\nconst getTest = async () => {\r\n  return makeGetRequest('');\r\n};\r\n\r\nexport { getTest };\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { getTest } from './utils/api/test';\n\nfunction App() {\n  const handleClick = async () => {\n    const response = await getTest();\n    console.log('json response: ', response);\n  };\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <img src={logo} className='App-logo' alt='logo' />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <button onClick={handleClick}>click</button>\n        <a\n          className='App-link'\n          href='https://reactjs.org'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}